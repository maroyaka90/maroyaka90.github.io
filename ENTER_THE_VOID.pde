

int[] data = {10, 20, 30, 40, 50, 60, 70, 80, 90, 
100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 
200, 210, 220, 230, 240, 250, 260, 270, 280, 290, 
300, 310, 320, 330, 340, 350, 360, 370, 380, 390, 
400, 410, 420, 430, 440, 450, 460, 470, 480, 490, 
500, 510, 520, 530, 540, 550, 560, 570, 580, 590, 
600, 610, 620, 630, 640, 650, 660, 670, 680, 690, 
700, 710, 720, 730, 740, 750, 760, 770, 780, 790, 
800, 810, 820, 830, 840, 850, 860, 870, 880, 890, 
900, 910, 920, 930, 940, 950, 960, 970, 980, 990, 
1000, 1010, 1020, 1030, 1040, 1050, 1060, 1070, 1080, 1090, 
1100, 1110, 1120, 1130, 1140, 1150, 1160, 1170, 1180, 1190, 
1200, 1210, 1220, 1230, 1240, 1250, 1260, 1270, 1280, 1290, 
1300, 1310, 1320, 1330, 1340, 1350, 1360, 1370, 1380, 1390, 
1400, 1410, 1420, 1430, 1440, 1450, 1460, 1470, 1480, 1490, 
1500, 1510, 1520, 1530, 1540, 1550, 1560, 1570, 1580, 1590, 
1600, 1610, 1620, 1630, 1640, 1650, 1660, 1670, 1680, 1690, 
1700, 1710, 1720, 1730, 1740, 1750, 1760, 1770, 1780, 1790, 
1800, 1810, 1820, 1830, 1840, 1850, 1860, 1870, 1880, 1890, 
1900, 1910, 1920, 1930, 1940, 1950, 1960, 1970, 1980, 1990, 
2000, 2010, 2020, 2030, 2040, 2050, 2060, 2070, 2080, 2090,
2100, 2110, 2120, 2130, 2140, 2150, 2160, 2170, 2180, 2190,
2200, 2210, 2220, 2230, 2240, 2250, 2260, 2270, 2280, 2290,
2300, 2310, 2320, 2330, 2340, 2350, 2360, 2370, 2380, 2390,
2400, 2410, 2420, 2430, 2440, 2450, 2460, 2470, 2480, 2490,
2500}; //Declare data
int value = 0;
int keyIndex;
float x, y, z, p;
float dim = 50.0;
float a;                 // Angle of rotation
float offset = PI/24.0;  // Angle offset between boxes
int num = 12;            // Number of boxes
boolean test;

void setup(){
size (500, 500, OPENGL);
}
  
void keyPressed()
{ // If the key is between 'A'(65) to 'Z' and 'a' to 'z'(122)
  if((key >= 'A' && key <= 'Z') || (key >= 'a' && key <= 'z')) {
    
    if(key <= 'Z') {
      keyIndex = key-'A';
    } else {
      keyIndex = key-'a';
    }
  }
  }

{
  if((value == 0)){
     value = keyIndex;
     redraw();
    } else {
      value = keyIndex;
    redraw();}
  }
      
void draw(){




y = y + 0.8;
z = z + 30.8;

int m = millis()/82;

//PImage img = loadImage("balls.jpg");
//beginShape();
//texture(img);
//vertex(-239, cos(188), 613, -225);
//vertex(50, m, m, m*100);
//vertex(500, 810, 25, 486);
//vertex(500, -12, 89, 558);
//endShape();
//background(565+*(keyIndex+-193));
for (int t = 1; t < x; t++) {
background(90*m%data[t]/(keyIndex/3+1), 45*m%data[t]/(keyIndex/3+1), 27*m%data[t]/(keyIndex/3+1));
}
x = 250;

if (p > 354){
 test = false;}
if (test == false){
 p = p - keyIndex/16;}
if (p < 149){
 test = true;}
if (test){
 p = p + keyIndex/16;}

 for (int i = 1; i < x; i++) {
   pushMatrix();
   translate(250, 250, millis()/756); 
rotateY(cos(x/365));
rotateX(sin(y/441));
fill(data[i]);
noFill();
stroke(keyIndex*4, keyIndex*4, m%i);
box(5*m%data[i]%m/(keyIndex/3+1));
popMatrix();
noise(keyIndex);}
}